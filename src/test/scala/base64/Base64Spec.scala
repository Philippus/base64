package base64

import org.scalatest.FunSpec

// all expected output generated by apache commons codec
class Base64Spec extends FunSpec {

  describe ("Encode") {
    it ("should allow url unsafe output") {
      assert(str(Encode("hello world?")) === "aGVsbG8gd29ybGQ/")
    }

    it ("should encode short strings") {
      (("f", "Zg==") :: ("fo", "Zm8=") :: ("foo", "Zm9v") :: Nil).foreach {
        case (in, out) => assert(str(Encode(in)) === out)
      }
    }
  }

  describe ("Encode.urlSafe") {
    it ("should escape url unsafe output") {
      assert(str(Encode.urlSafe("hello world?")) === "aGVsbG8gd29ybGQ_")
    }
  }

  describe ("Decode") {
    it ("should not bother decoding pad only input") {
      ("====" :: "===" :: "==" :: "=" :: Nil).foreach {
        p => assert(Decode(p).right.map(_.size) === Right(0))
      }
    }
  }

  describe ("Decode.urlSafe") {

  }

  def str(bytes: Array[Byte]) = new String(bytes)
}
